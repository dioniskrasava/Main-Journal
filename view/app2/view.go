package app2

import (
	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/layout"
	"fyne.io/fyne/v2/widget"
)

func CreateContentApp() *fyne.Container {

	activityType := widget.NewSelect([]string{"–ö–Ω–∏–≥–∞", "–ö–æ–¥", "–í–∏–¥–µ–æ"}, func(value string) {})
	activityType.PlaceHolder = "–í—ã–±–µ—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"

	startTime := widget.NewEntry()
	endTime := widget.NewEntry()
	totalTime := widget.NewEntry()
	comment := widget.NewMultiLineEntry()
	addButton := widget.NewButton("–î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", func() {})

	btnSupp0 := widget.NewButton("‚ò∞", func() {})
	btnSupp1 := widget.NewButton("üû¥", func() {})
	btnSupp2 := widget.NewButton("üû¥", func() {})
	btnSupp3 := widget.NewButton("üû¥", func() {})

	lbTypeActivity := widget.NewLabel("–¢–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:")
	lbStartTime := widget.NewLabel("–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:")
	lbEndTime := widget.NewLabel("–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è:")
	lbTotalTime := widget.NewLabel("–û–±—â–µ–µ –≤—Ä–µ–º—è:")
	lbNameComment := widget.NewLabel("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:")

	row1 := container.NewGridWithColumns(3, lbTypeActivity, activityType, btnSupp0)
	row2 := container.NewGridWithColumns(3, lbStartTime, startTime, btnSupp1)
	row3 := container.NewGridWithColumns(3, lbEndTime, endTime, btnSupp2)
	row4 := container.NewGridWithColumns(3, lbTotalTime, totalTime, btnSupp3)
	row5 := container.NewGridWithColumns(2, lbNameComment, comment)
	row6 := container.NewGridWithColumns(1, addButton)

	globContainer := container.NewGridWithRows(6, row1, row2, row3, row4, row5, row6)

	return globContainer
}

func CreateContentApp2() *fyne.Container {
	// –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç—ã
	label1 := widget.NewLabel("Label 1")
	label2 := widget.NewLabel("Label 2")
	label3 := widget.NewLabel("Label 3")
	button := widget.NewButton("Button", func() {})

	// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å GridLayout
	grid := container.New(layout.NewGridLayout(3),
		label1, layout.NewSpacer(), label2, // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞
		layout.NewSpacer(), button, layout.NewSpacer(), // –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞
		label3, layout.NewSpacer(), layout.NewSpacer(), // –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞
	)

	return grid
}
