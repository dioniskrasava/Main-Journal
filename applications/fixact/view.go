package fixact

import (
	"database/sql"
	"fmt"
	"mainjournal/applications/fixact/pos"

	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/widget"
	_ "github.com/mattn/go-sqlite3"
)

func createInterfaceApp(db *sql.DB) (content *fyne.Container) {
	// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
	activityType := widget.NewSelect([]string{"–ö–Ω–∏–≥–∞", "–ö–æ–¥", "–í–∏–¥–µ–æ"}, func(value string) { activityTypeEvent(value) })
	activityType.PlaceHolder = "–í—ã–±–µ—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"

	startTime := widget.NewEntry()
	startTime.SetText(getNow())

	endTime := widget.NewEntry()
	totalTime := widget.NewEntry()
	comment := widget.NewMultiLineEntry()
	addButton := widget.NewButton("–î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", func() { addAct(widgtsApp, db) })

	// –î–£–ë–õ–ò–†–£–ï–ú –°–û–ó–î–ê–ù–ù–´–ï –í–ò–î–ñ–ï–¢–´ –í –ì–õ–û–ë–ê–õ–¨–ù–£–Æ –ü–ï–†–ï–ú–ï–ù–ù–£–Æ
	widgtsApp = Widgets{
		activityType: activityType,
		startTime:    startTime,
		endTime:      endTime,
		totalTime:    totalTime,
		comment:      comment,
		addButton:    addButton,
	}

	btnSupp1 := widget.NewButton("üû¥", func() { btnSupp1Event(widgtsApp) })
	btnSupp2 := widget.NewButton("üû¥", func() { btnSupp2Event(widgtsApp) })
	btnSupp3 := widget.NewButton("üû¥", func() { btnSupp3Event(widgtsApp) })

	globContainer := container.NewWithoutLayout()

	h1 := float32(10)
	h2 := float32(50)
	h3 := float32(90)
	h4 := float32(130)
	h5 := float32(170)
	h6 := float32(250)

	pos.AddRow(globContainer, WIDTH, h1, widget.NewLabel("–¢–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:"), activityType)
	pos.AddRow(globContainer, WIDTH, h2, widget.NewLabel("–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:"), startTime, btnSupp1)
	pos.AddRow(globContainer, WIDTH, h3, widget.NewLabel("–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è:"), endTime, btnSupp2)
	pos.AddRow(globContainer, WIDTH, h4, widget.NewLabel("–û–±—â–µ–µ –≤—Ä–µ–º—è:"), totalTime, btnSupp3)
	pos.AddRow(globContainer, WIDTH, h5, widget.NewLabel("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:"), comment)
	pos.AddRow(globContainer, WIDTH, h6, widget.NewLabel(""), addButton)

	return globContainer
}

// activityType EVENTS (CLCIK)
func activityTypeEvent(value string) {
	fmt.Println("–í—ã–±—Ä–∞–Ω ", value)
}

// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–• –ö–ù–û–ü–û–ö
// –î–õ–Ø –ù–ò–• –ù–£–ñ–ù–û –ü–ò–°–ê–¢–¨ –ì–õ–û–ë–ê–õ–¨–ù–´–ô –û–ë–™–ï–ö–¢ –í–ò–î–ñ–ï–¢–û–í –ü–†–ò–õ–û–ï–ñ–ù–ò–Ø, –ß–¢–û–ë–´ –í –≠–¢–ò–• –§–£–ù–ö–¶–ò–Ø–•
// –°–ß–ò–¢–´–í–ê–¢–¨ –ó–ù–ê–ß–ï–ù–ò–Ø –° –≠–¢–ò–• –í–ò–î–ñ–ï–¢–û–í –ò –ü–û–ú–ï–©–ê–¢–¨ –ò–• –í AFixD (–æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ –§–ò–ö–°-–ê–ö–¢–ê)
func btnSupp1Event(widgtsApp Widgets) {
	widgtsApp.startTime.SetText(getNow())
	appFieldVal = readFieldApp(widgtsApp)
	fmt.Println(appFieldVal)

}

func btnSupp2Event(widgtsApp Widgets) {
	widgtsApp.endTime.SetText(getNow())
	appFieldVal = readFieldApp(widgtsApp)
	fmt.Println(appFieldVal)
}

func btnSupp3Event(widgtsApp Widgets) {
	widgtsApp.totalTime.SetText(getActTime(widgtsApp.endTime.Text, widgtsApp.startTime.Text))
	appFieldVal = readFieldApp(widgtsApp)
	fmt.Println(appFieldVal)
}
